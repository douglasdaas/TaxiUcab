/
CREATE OR REPLACE DIRECTORY DIR_VINOS as 'C:\Users\Jhohana\Desktop\';
/
/*grant read,write on directory DIR_VINOS to admin;*/
/
CREATE OR REPLACE TYPE TELEFONO AS OBJECT(
	codigo_pais varchar2(4),
	codigo_telefonia varchar2(4),
	numero_telefonico varchar2(15)
);
/
CREATE OR REPLACE TYPE DATOS AS OBJECT(
	cedula_identidad number,
	nombres varchar2(40),
	apellidos varchar2(40),
	fecha_nac date,
	telefono TELEFONO,
	//*foto BLOB*/
);
/
CREATE OR REPLACE TYPE DIRECCION AS OBJECT(
	zona varchar2(30),
	calle varchar2(30),
	edificio_casa varchar2(30)
);
/
CREATE TABLE CLIENTE(
	id_cliente number primary key,
	datos_cliente DATOS
);
/
CREATE TABLE CONDUCTOR(
	id_conductor number primary key,
	datos_conductor DATOS,
	/**doc_cedula BFILE not null,*/
	usuario varchar2(20) not null,
	password varchar2(20) not null,
	email varchar2(50) not null,
	estatus varchar2(10) not null,
	id_par number not null,
	check (estatus in('Activo','Inactivo'))
);
/
CREATE TABLE FAVORITO(
	id_cli number not null,
	id_cond number not null,
	CONSTRAINT FAVORITO_PK PRIMARY KEY (id_cli,id_cond)
);
/
CREATE TABLE FOTO(
	id_foto number primary key,
	/*archivo BLOB not null,*/
	fecha date not null,
	id_vehi number not null
);
/
CREATE TABLE HIST_MONEDERO(
	cantidad number not null,
	fecha date not null,
	tipo_recarga_consumo varchar2(10) not null,
	tipo_recarga varchar2(15),
	referencia number,
	banco_origen varchar2(15),
	id_mon number not null,
	id_tdc number,
	id_mon_origen number,
	check (tipo_recarga_consumo in('Recarga','Consumo')),
	check (tipo_recarga in('TDC','Transferencia','Monedero')),
	check (banco_origen in('Banesco','Mercantil','Venezuela','Provincial')),
	/*CONSTRAINT HIST_MONEDERO_PK PRIMARY KEY (id_cli,id_cond)*/
);
/
CREATE TABLE HIST_PRECIO_KM(
	id_precio number primary key,
	cantidad number not null,
	fecha_inicio date not null,
	activo varchar2(3) not null,
	check (activo in('Si','No'))
);
/
CREATE TABLE INSPECCION(
	id_inspeccion number not null,
	fecha_inspeccion date not null,
	aprobado varchar2(3) not null,
	observaciones varchar2(200),
	id_vehi number not null,
	id_cond number not null,
	check (aprobado in('Si','No')),
	CONSTRAINT INSPECCION_PK PRIMARY KEY (id_inspeccion,id_vehi,id_cond)
);
/
CREATE TABLE MONEDERO_COND(
	id_monedero_cond number primary key,
	saldoactual number not null,
	fecha date not null,
	id_cond number not null
);
/
CREATE TABLE MONEDERO_VIRTUAL(
	id_forma_pago number not null,
	saldoactual number not null,
	/*id_us number primary key*/
);
/
CREATE TABLE PAGO_SERVICIO(
	cantidad number not null,
	id_serv number not null,
	id_tdc number,
	id_mon number
);
/
CREATE TABLE PARROQUIA(
	id_lugar number primary key,
	nombre varchar2(40) not null,
	estado varchar2(20) not null
);
/
CREATE TABLE RUTA(
	kilometros number not null,
	id_par_origen number not null,
	id_par_destino number not null,
	CONSTRAINT RUTA_PK PRIMARY KEY (id_par_origen,id_par_destino)
);
/
CREATE TABLE SERVICIO(
	id_servicio number not null,
	precio number not null,
	efectivo varchar2(2) not null,
	codigo_pago_cliente number,
	codigo_pago_conductor number,
	califica_cliente number,
	califica_conductor number,
	fecha_hora date not null,
	tipo varchar2(10) not null,
	estatus	varchar2(15) not null,
	punto_referencia DIRECCION,
	fecha_programada date,
	id_hp_km number not null,
	id_ruta number not null,
	id_us number not null,
	id_cond number not null,
	check (efectivo in('Si','No')),
	check (tipo in('','')),
	check (estatus in('Completado','No Completado','Cancelado')),
	CONSTRAINT SERVICIO_PK PRIMARY KEY (id_servicio,id_us,id_cond)
);
/
CREATE TABLE TARJETA_CREDITO(
	id_forma_pago number not null,
	tipo varchar2(10) not null,
	nombre varchar2(30) not null,
	fecha_venci date not null,
	num_seguridad varchar2(3) not null,
	num_tajeta varchar2(16) not null,
	id_us number not null,
	check (tipo in('Debito','Credito'))
);
/
CREATE TABLE USUARIO(
	id_usuario number primary key,
	usuario varchar2(20) not null,
	password varchar2(20) not null,
	tipo varchar2(10) not null,
	email varchar2(50) not null,
	id_cli number not null,
	check (tipo in('Natural','Ejecutivo'))
);
/
CREATE TABLE VEHICULO(
	id_vehiculo number primary key,
	placa varchar2(7) not null,
	marca varchar2(10) not null,
	color varchar2(15) not null,
	/*foto BLOB not null,*/
	aire_acondicionado varchar2(2) not null,
	reproductor varchar2(2) not null,
	blindado varchar2(2) not null,
	ano number not null,
	/*doc_propiedad BFILE not null,*/
	/*carnet_circulacion BFILE not null,*/
	estatus varchar2(10) not null,
	check (aire_acondicionado in('Si','No')),
	check (reproductor in('Si','No')),
	check (blindado in('Si','No')),
	check (estatus in('Activo','Inactivo'))
);
/
/
/
/
/
/
CREATE SEQUENCE CLIENTE_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER CLIENTE_SECUENCIA 
BEFORE INSERT ON CLIENTE
FOR EACH ROW
BEGIN
  SELECT CLIENTE_SQNC.NEXTVAL
  INTO   :new.id_cliente
  FROM   dual;
END;
/
CREATE SEQUENCE CONDUCTOR_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER CONDUCTOR_SECUENCIA 
BEFORE INSERT ON CONDUCTOR
FOR EACH ROW
BEGIN
  SELECT CONDUCTOR_SQNC.NEXTVAL
  INTO   :new.id_conductor
  FROM   dual;
END;
/
CREATE SEQUENCE FOTO_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER FOTO_SECUENCIA 
BEFORE INSERT ON FOTO
FOR EACH ROW
BEGIN
  SELECT FOTO_SQNC.NEXTVAL
  INTO   :new.id_foto
  FROM   dual;
END;
/
CREATE SEQUENCE HIST_PRECIO_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER HIST_PRECIO_SECUENCIA 
BEFORE INSERT ON HIST_PRECIO_KM
FOR EACH ROW
BEGIN
  SELECT HIST_PRECIO_SQNC.NEXTVAL
  INTO   :new.id_precio
  FROM   dual;
END;
/
CREATE SEQUENCE INSPECCION_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER INSPECCION_SECUENCIA 
BEFORE INSERT ON INSPECCION
FOR EACH ROW
BEGIN
  SELECT INSPECCION_SQNC.NEXTVAL
  INTO   :new.id_inspeccion
  FROM   dual;
END;
/
CREATE SEQUENCE MONEDERO_COND_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER MONEDERO_COND_SECUENCIA 
BEFORE INSERT ON MONEDERO_COND
FOR EACH ROW
BEGIN
  SELECT MONEDERO_COND_SQNC.NEXTVAL
  INTO   :new.id_monedero_cond
  FROM   dual;
END;
/
CREATE SEQUENCE MONEDERO_VIRTUAL_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER MONEDERO_VIRTUAL_SECUENCIA 
BEFORE INSERT ON MONEDERO_VIRTUAL
FOR EACH ROW
BEGIN
  SELECT MONEDERO_VIRTUAL_SQNC.NEXTVAL
  INTO   :new.id_forma_pago
  FROM   dual;
END;
/
CREATE SEQUENCE PARROQUIA_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER PARROQUIA_SECUENCIA 
BEFORE INSERT ON PARROQUIA
FOR EACH ROW
BEGIN
  SELECT PARROQUIA_SQNC.NEXTVAL
  INTO   :new.id_lugar
  FROM   dual;
END;
/
CREATE SEQUENCE SERVICIO_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER SERVICIO_SECUENCIA 
BEFORE INSERT ON SERVICIO
FOR EACH ROW
BEGIN
  SELECT SERVICIO_SQNC.NEXTVAL
  INTO   :new.id_servicio
  FROM   dual;
END;
/
CREATE SEQUENCE TARJETA_CREDITO_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER TARJETA_CREDITO_SECUENCIA 
BEFORE INSERT ON TARJETA_CREDITO
FOR EACH ROW
BEGIN
  SELECT TARJETA_CREDITO_SQNC.NEXTVAL
  INTO   :new.id_forma_pago
  FROM   dual;
END;
/
CREATE SEQUENCE USUARIO_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER USUARIO_SECUENCIA 
BEFORE INSERT ON USUARIO
FOR EACH ROW
BEGIN
  SELECT USUARIO_SQNC.NEXTVAL
  INTO   :new.id_usuario
  FROM   dual;
END;
/
CREATE SEQUENCE VEHICULO_SQNC START WITH 1;
/
CREATE OR REPLACE TRIGGER VEHICULO_SECUENCIA 
BEFORE INSERT ON VEHICULO
FOR EACH ROW
BEGIN
  SELECT VEHICULO_SQNC.NEXTVAL
  INTO   :new.id_vehiculo
  FROM   dual;
END;
/
/
/
/
/
ALTER TABLE CONDUCTOR ADD CONSTRAINT CONDUCTORPARROQUIA_FK FOREIGN KEY (id_par) REFERENCES PARROQUIA(id_parroquia);
/
ALTER TABLE FAVORITO ADD CONSTRAINT FAVORITOUSUARIO_FK FOREIGN KEY (id_us) REFERENCES USUARIO(id_usuario);
/
ALTER TABLE FAVORITO ADD CONSTRAINT FAVORITOCONDUCTOR_FK FOREIGN KEY (id_cond) REFERENCES CONDUCTOR(id_conductor);
/
ALTER TABLE FOTO ADD CONSTRAINT FOTOVEHICULO_FK FOREIGN KEY (id_vehi) REFERENCES VEHICULO(id_vehiculo);
/
ALTER TABLE HIST_MONEDERO ADD CONSTRAINT HISTMONMON_FK FOREIGN KEY (id_mon) REFERENCES MONEDERO_VIRTUAL(id_forma_pago);
/
ALTER TABLE HIST_MONEDERO ADD CONSTRAINT HISTMONTDC_FK FOREIGN KEY (id_tdc) REFERENCES TARJETA_CREDITO(id_forma_pago);
/
ALTER TABLE HIST_MONEDERO ADD CONSTRAINT HISTMONORI_FK FOREIGN KEY (id_mon_origen) REFERENCES MONEDERO_VIRTUAL(id_forma_pago);
/
ALTER TABLE INSPECCION ADD CONSTRAINT _FK FOREIGN KEY (id_) REFERENCES (id_);
/
ALTER TABLE  ADD CONSTRAINT _FK FOREIGN KEY (id_) REFERENCES (id_);
/
ALTER TABLE  ADD CONSTRAINT _FK FOREIGN KEY (id_) REFERENCES (id_);
/
ALTER TABLE  ADD CONSTRAINT _FK FOREIGN KEY (id_) REFERENCES (id_);
/
ALTER TABLE  ADD CONSTRAINT _FK FOREIGN KEY (id_) REFERENCES (id_);
/
ALTER TABLE MONEDERO_COND ADD CONSTRAINT MONEDEROCONDUCTOR_FK FOREIGN KEY (id_cond) REFERENCES CONDUCTOR(id_conductor);
/
ALTER TABLE USUARIO ADD CONSTRAINT USUARIOCLIENTE_FK FOREIGN KEY (id_cli) REFERENCES CLIENTE(id_cliente);
/


Buscar archivos BLOB y BFILE
Hacer correcciones a la base de datos
Cambiar referencias













